@model WorkoutLog.Core.Interfaces.IExercise

@{
    ViewBag.Title = "Add";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm())
{
    <div class="container top-edge form-horizontal" id="fun">

        <div class="row">
            <div class="col-lg-12">
                <div class="starter-template">
                    <h1 id="form-header">Workout Tracker</h1>
                </div>
            </div>
        </div>

        <div class="row" id="errorList">
            <div class="col-lg-12">
                <div class="alert alert-danger" role="alert">
                    <ul></ul>
                </div>
            </div>
        </div>

        <div class="form-group">
            <!-- <div class="control-group">-->
            <label class="col-sm-2 control-label">Body Part</label>
            <div class="col-sm-4">
                @Html.DropDownListFor(model => model.BodyPartID, new SelectList(ViewBag.BodyParts, "ID", "BodyPartName"), new { @class = "form-control validate-number" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-sm-2 control-label">Exercise Type</label>
            <div class="col-sm-4">
                @Html.DropDownListFor(model => model.ExerciseTypeID, new SelectList(ViewBag.ExerciseTypes, "ID", "ExerciseName"), new { @class = "form-control validate-number" })
            </div>
        </div>

        <div class="form-group" id="setsRow">
            <label class="col-lg-2 control-label">Sets</label>
            <div class="col-lg-4">
                @Html.TextBoxFor(model => model.ExerciseSets, new { @class = "form-control validate-number", data_error_text = "Please Enter a valid input for SETS. Input must be an integer greater than 0." })
            </div>

        </div>

        <div class="form-group" id="repsRow">
            <label class="col-lg-2 control-label">@Html.LabelFor(model => model.Reps)</label>
            <div class="col-lg-4">
                @Html.TextBoxFor(model => model.Reps, new { @class = "form-control validate-number", data_error_text="Please Enter a valid input for REPS. Input must be an integer greater than 0." })
            </div>

        </div>

        <div class="form-group" id="weightsRow">
            <label class="col-lg-2 control-label">Weights</label>
            <div class="col-lg-4">
                @Html.TextBoxFor(model => model.Weights, new { @class = "form-control validate-number", data_error_text="Please Enter a valid input for WHEIGHTS. Input must be an integer greater than 0." })
            </div>

        </div>

        <div class="form-group">
            <div class="col-lg-offset-2 col-lg-4">
                <button id="btnSave" text="Save" class="btn btn-primary btn-save-workout" type="submit">Save</button>
                <a class="btn btn-danger" href="/workoutlog/index">Cancel</a>
            </div>
        </div>
    </div>
    <!-- /.container -->
}

<script src="/Scripts/validation.js"></script>
